/*
 * YNAB API Endpoints
 *
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = YNAB.SDK.Client.OpenAPIDateConverter;

namespace YNAB.SDK.Model
{
    /// <summary>
    /// ScheduledTransactionResponseData
    /// </summary>
    [DataContract(Name = "ScheduledTransactionResponse_data")]
    public partial class ScheduledTransactionResponseData : IEquatable<ScheduledTransactionResponseData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScheduledTransactionResponseData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ScheduledTransactionResponseData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ScheduledTransactionResponseData" /> class.
        /// </summary>
        /// <param name="scheduledTransaction">scheduledTransaction (required).</param>
        public ScheduledTransactionResponseData(ScheduledTransactionDetail scheduledTransaction = default(ScheduledTransactionDetail))
        {
            // to ensure "scheduledTransaction" is required (not null)
            this.ScheduledTransaction = scheduledTransaction ?? throw new ArgumentNullException("scheduledTransaction is a required property for ScheduledTransactionResponseData and cannot be null");
        }

        /// <summary>
        /// Gets or Sets ScheduledTransaction
        /// </summary>
        [DataMember(Name = "scheduled_transaction", IsRequired = true, EmitDefaultValue = false)]
        public ScheduledTransactionDetail ScheduledTransaction { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ScheduledTransactionResponseData {\n");
            sb.Append("  ScheduledTransaction: ").Append(ScheduledTransaction).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ScheduledTransactionResponseData);
        }

        /// <summary>
        /// Returns true if ScheduledTransactionResponseData instances are equal
        /// </summary>
        /// <param name="input">Instance of ScheduledTransactionResponseData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ScheduledTransactionResponseData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ScheduledTransaction == input.ScheduledTransaction ||
                    (this.ScheduledTransaction != null &&
                    this.ScheduledTransaction.Equals(input.ScheduledTransaction))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ScheduledTransaction != null)
                    hashCode = hashCode * 59 + this.ScheduledTransaction.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
